import streamlit as st
import json
import os
from utils.voice_utils import speak_text

def load_bank_links():
    path = os.path.join("data", "banks_by_scheme.json")
    if os.path.exists(path):
        with open(path, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

banks_data = load_bank_links()

def recommend_interface(insert_yojana, insert_feedback):
    st.subheader("ЁЯУЛ рдЕрдкрдиреА рдЬрд╛рдирдХрд╛рд░реА рднрд░реЗрдВ рдФрд░ рдпреЛрдЬрдирд╛рдПрдБ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ")

    with st.form("recommend_form"):
        name = st.text_input("рдирд╛рдо")
        age = st.number_input("рдЙрдореНрд░", min_value=0)
        salary = st.number_input("рд╕рд╛рд▓рд╛рдирд╛ рдЖрдп (тВ╣)")
        state = st.selectbox("рд░рд╛рдЬреНрдп", ["рдЙрддреНрддрд░ рдкреНрд░рджреЗрд╢", "рдорд╣рд╛рд░рд╛рд╖реНрдЯреНрд░", "рдмрд┐рд╣рд╛рд░", "рд░рд╛рдЬрд╕реНрдерд╛рди", "рдЕрдиреНрдп"])
        submit = st.form_submit_button("ЁЯОп рд╕реБрдЭрд╛рд╡ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ")

    if submit:
        recommendation = f"{name} рдЬреА, рдЖрдкрдХреА рдЬрд╛рдирдХрд╛рд░реА рдХреЗ рдЕрдиреБрд╕рд╛рд░, рдЖрдк {state} рд░рд╛рдЬреНрдп рдореЗрдВ рд░рд╣рдиреЗ рд╡рд╛рд▓реЗ рд╣реИрдВ рдФрд░ рдЖрдкрдХреА рдЙрдореНрд░ {age} рд╡рд░реНрд╖ рд╣реИред"
        suggested_schemes = []
        
        if salary < 200000:
            suggested_schemes = ["рдкреНрд░рдзрд╛рдирдордВрддреНрд░реА рдЬрди рдзрди рдпреЛрдЬрдирд╛", "рдореБрджреНрд░рд╛ рд▓реЛрди рдпреЛрдЬрдирд╛", "рд╕реБрдХрдиреНрдпрд╛ рд╕рдореГрджреНрдзрд┐ рдпреЛрдЬрдирд╛"]
            recommendation += " рдЖрдк рдкреНрд░рдзрд╛рдирдордВрддреНрд░реА рдЬрди рдзрди рдпреЛрдЬрдирд╛, рдореБрджреНрд░рд╛ рд▓реЛрди рдпреЛрдЬрдирд╛, рдФрд░ рд╕реБрдХрдиреНрдпрд╛ рдпреЛрдЬрдирд╛ (рдпрджрд┐ applicable) рдХреЗ рд▓рд┐рдП рдкрд╛рддреНрд░ рд╣реЛ рд╕рдХрддреЗ рд╣реИрдВред"
        else:
            suggested_schemes = ["рдПрд▓рдЖрдИрд╕реА рдмреАрдорд╛", "рдПрдирдкреАрдПрд╕"]
            recommendation += " рдЖрдк рдПрд▓рдЖрдИрд╕реА рдмреАрдорд╛ рдФрд░ рдПрдирдкреАрдПрд╕ рдЬреИрд╕реА рдпреЛрдЬрдирд╛рдУрдВ рдореЗрдВ рдирд┐рд╡реЗрд╢ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред"

        insert_yojana(name, age, salary, state, recommendation)
        st.success(recommendation)
        speak_text(recommendation)

        for scheme in suggested_schemes:
            st.markdown(f"---")
            st.markdown(f"### ЁЯУЭ {scheme}")

            if scheme in banks_data:
                st.markdown("#### ЁЯПж рдЗрд╕ рдпреЛрдЬрдирд╛ рдХреЗ рд▓рд┐рдП рдмреИрдВрдХ рд╡рд┐рдХрд▓реНрдк:")
                for bank in banks_data[scheme]:
                    st.markdown(f"**{bank['bank']}**")
                    st.markdown(f"ЁЯФЧ [Apply Here]({bank['apply_url']})")
                    st.markdown(f"ЁЯУЮ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ: {bank['contact']}")
                    st.markdown("---")
            else:
                st.markdown("рдмреИрдВрдХ рд▓рд┐рдВрдХ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИрдВред")

        # Feedback prompt
        feedback = st.radio("рдХреНрдпрд╛ рдпрд╣ рд╕реБрдЭрд╛рд╡ рдЙрдкрдпреЛрдЧреА рдерд╛?", ("рд╣рд╛рдБ", "рдирд╣реАрдВ"), index=None, horizontal=True)
        if feedback:
            insert_feedback("recommendation", recommendation, feedback)
            st.info("рдзрдиреНрдпрд╡рд╛рдж! рдЖрдкрдХреА рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛ рд╕реБрд░рдХреНрд╖рд┐рдд рдХрд░ рд▓реА рдЧрдИ рд╣реИред")
